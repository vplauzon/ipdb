using Ipdb.Lib2.Cache;
using System;
using System.Buffers;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Linq;
using System.Runtime.InteropServices;
using System.Threading;

namespace Ipdb.Lib2.DbStorage
{
    /// <summary>
    /// Responsible for reading and writing record blocks.
    /// A record block has the following layout:
    /// ???????????????????????????????????????????????????????????????????????????????
    /// ???????????????????????????????????????????????????????????????????????????????
    /// ???????????????????????????????????????????????????????????????????????????????
    /// DocumentCount (short)
    /// Header:  for each document, Revision ID (long) & Length(short)
    /// Payloads:  for each document, Payload bytes (of length advertised in the header)
    /// </summary>
    internal class RecordManager : DataManagerBase
    {
        #region Inner types
        [StructLayout(LayoutKind.Sequential, Pack = 1)]
        private readonly record struct Header(long RevisionId, short Length);
        #endregion

        public RecordManager(StorageManager storageManager)
            : base(storageManager)
        {
        }
    }
}